PyFABIL - Python FpgA Board Interfacing Layer
---------------------------------------------

Provides a Python library which can communicate with FPGA boards. Currently
it implements the UCP and KATPC protocols, such that it can communicate with
UniBoards, Tile Processing Modules ROACH boards

Directory structures
--------------------

\- doc      Contains any documentation
 - python   Python wrapper
 - scripts  Helper scripts, including a mock_tpm script to debug communication
 - src\
       - library  The C++ library implementation
       - server   A protobuf/zermoq wrapper for RPC calls (required for current user interface)

Comiling the library
--------------------

Requirements: - g++ 4.6+

cd src/library
mkidr build
cd build
cmake ..
make

You can also make install, which will install the library to /usr/local/lib

Compiling the server
--------------------

Requirements: - zeromq   (4.1.0)
              - protobuf (2.6.0) Note: Read make file in case of different version

cd src/server
protoc --cpp_out=. message.proto (Only needs to be performed once, or when message.proto changes)
If required, change the LIBRARY_DIR variable in the makefile to point to the source folder of the library
make

To use, you need to export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/path_to_project/src/library

Using the Python wrapper
------------------------

Requirements: enum34 (pip should install it)

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/path_to_project/src/library

python setup.py install
Or simply open a python console from the python directory

